# MODULE TO CREATE HIGH-QUALITY PLOT
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import ticker, colors


#=====================================================================================
# SET TEXT FONT AND SIZE
#=====================================================================================
plt.rc('font', family='serif', serif='Palatino')
plt.rc('text', usetex=True)
plt.rc('xtick', labelsize=20)
plt.rc('ytick', labelsize=20)
plt.rc('axes', labelsize=20)
#=====================================================================================


x=np.linspace(0,6.28,100)
y=np.cos(x)

fig=plt.figure()
ax=fig.add_subplot(111)


#=====================================================================================
# SET LINE GRAPHIC
#=====================================================================================
ax.plot(x,y,'c', linewidth=3.3)
#=====================================================================================

#=====================================================================================
# SET AXIS LABELS
#=====================================================================================
ax.set_xlabel(r'x [mm] $\rho$')
ax.set_ylabel(r'\TeX\ style! $\sum e^{-i\pi}$')
#=====================================================================================


#=====================================================================================
# ADJUST SUBPLOT IN FRAME
#=====================================================================================
plt.subplots_adjust(top=0.95,bottom=0.2,left=0.2,right=0.95)
#=====================================================================================

#=====================================================================================
# SET TICK LOCATION
#=====================================================================================

# Create your ticker object with M ticks
M = 4
yticks = ticker.MaxNLocator(M)
yticks_m=ticker.MaxNLocator(M*2)
xticks = ticker.MaxNLocator(M)
# Set the yaxis major locator using your ticker object. You can also choose the minor
# tick positions with set_minor_locator.
ax.yaxis.set_major_locator(yticks)
#ax.yaxis.set_minor_locator(yticks_m)
ax.xaxis.set_major_locator(xticks)
#=====================================================================================

#=====================================================================================
# AXIS RANGE
#=====================================================================================
ax.set_xlim([0,100])
#=====================================================================================

#=====================================================================================
# SHRINK PLOT BOX AND PUT LEGEND OUT OF IT
#=====================================================================================
#Shrink current axis by 20%
box = ax.get_position()
ax.set_position([box.x0, box.y0, box.width * 0.85, box.height])

# Put a legend to the right of the current axis
ax.legend(loc='center left', bbox_to_anchor=(1, 0.5))
#=====================================================================================


#=====================================================================================
# ADD ANOTHER SUBGRAPH (with subaxes) in the plot
#=====================================================================================
a = plt.axes([0.3, 0.6, .2, .2])#, facecolor='y')
plt.plot(x, np.sin(x))
plt.title('sin(x)')
plt.xlim(0, 6.28)
plt.xticks([])
plt.yticks([])
#=====================================================================================


#=====================================================================================
# DEFINE YOUR OWN COLORMAP, this one is similar to "jet" but with white at beginning
# needs matplotlib.colors
#=====================================================================================

cdict = {'red': ((0., 1, 1),
                 (0.05, 1, 1),
                 (0.11, 0, 0),
                 (0.66, 1, 1),
                 (0.89, 1, 1),
                 (1, 0.5, 0.5)),
         'green': ((0., 1, 1),
                   (0.05, 1, 1),
                   (0.11, 0, 0),
                   (0.375, 1, 1),
                   (0.64, 1, 1),
                   (0.91, 0, 0),
                   (1, 0, 0)),
         'blue': ((0., 1, 1),
                  (0.05, 1, 1),
                  (0.11, 1, 1),
                  (0.34, 1, 1),
                  (0.65, 0, 0),
                  (1, 0, 0))}

my_cmap = colors.LinearSegmentedColormap('my_colormap',cdict,256)
#=====================================================================================




# SHOW
plt.show()
